/**
 * Generated by orval v6.19.1 üç∫
 * Do not edit manually.
 * ThinkEasy
 * Test Task BE
 * OpenAPI spec version: 1.0
 */
import axios from 'axios'
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
export interface PostResponse {
  authorId: string;
  content: string;
  createdAt: string;
  id: string;
  published: boolean;
  title: string;
  updatedAt: string;
}

export type PostResponceContent = { [key: string]: any };

export type PostResponceAuthor = { [key: string]: any };

export interface PostResponce {
  author: PostResponceAuthor;
  content: PostResponceContent;
  published: boolean;
  title: string;
}

export interface CreatePostInput {
  content: string;
  title: string;
}

export interface RefreshResponceModel {
  access_token: string;
}

export interface RefreshTokenInput {
  token: string;
}

export interface LoginInput {
  email: string;
  password: string;
}

export interface Auth {
  accessToken: string;
  refreshToken: string;
}

export interface SignupInput {
  email: string;
  firstname: string;
  lastname: string;
  password: string;
}





  /**
 * @summary Signup a new user
 */
export const authControllerSignup = <TData = AxiosResponse<Auth>>(
    signupInput: SignupInput, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://frontend-test-be.stage.thinkeasy.cz/auth/signup`,
      signupInput,options
    );
  }

/**
 * @summary Login an existing user
 */
export const authControllerLogin = <TData = AxiosResponse<Auth>>(
    loginInput: LoginInput, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://frontend-test-be.stage.thinkeasy.cz/auth/login`,
      loginInput,options
    );
  }

/**
 * @summary Refresh access token using a refresh token
 */
export const authControllerRefreshToken = <TData = AxiosResponse<RefreshResponceModel>>(
    refreshTokenInput: RefreshTokenInput, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://frontend-test-be.stage.thinkeasy.cz/auth/refresh-token`,
      refreshTokenInput,options
    );
  }

/**
 * @summary Create a new post
 */
export const postsControllerCreate = <TData = AxiosResponse<PostResponce>>(
    createPostInput: CreatePostInput, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `https://frontend-test-be.stage.thinkeasy.cz/posts`,
      createPostInput,options
    );
  }

/**
 * @summary Get all posts
 */
export const postsControllerGetAllPosts = <TData = AxiosResponse<PostResponse[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://frontend-test-be.stage.thinkeasy.cz/posts`,options
    );
  }

/**
 * @summary Get all posts of a user
 */
export const postsControllerUserPosts = <TData = AxiosResponse<PostResponse[]>>(
    userId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://frontend-test-be.stage.thinkeasy.cz/posts/user/${userId}`,options
    );
  }

/**
 * @summary Get a post by its ID
 */
export const postsControllerPost = <TData = AxiosResponse<PostResponse>>(
    postId: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `https://frontend-test-be.stage.thinkeasy.cz/posts/${postId}`,options
    );
  }

export type AuthControllerSignupResult = AxiosResponse<Auth>
export type AuthControllerLoginResult = AxiosResponse<Auth>
export type AuthControllerRefreshTokenResult = AxiosResponse<RefreshResponceModel>
export type PostsControllerCreateResult = AxiosResponse<PostResponce>
export type PostsControllerGetAllPostsResult = AxiosResponse<PostResponse[]>
export type PostsControllerUserPostsResult = AxiosResponse<PostResponse[]>
export type PostsControllerPostResult = AxiosResponse<PostResponse>
